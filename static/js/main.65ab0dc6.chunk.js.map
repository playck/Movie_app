{"version":3,"sources":["components/Modal.js","components/Movie_All.js","components/Movie_domestic.js","components/Movie_oversea.js","components/MovieDays.js","components/MovieForm.js","components/MovieApp.js","App.js","serviceWorker.js","index.js"],"names":["Modal","this","props","flg","onClose","findData","className","title","width","height","src","key","frameborder","allow","allowfullscreen","onClick","Component","Movie_All","state","Movies","Data_All","text","handleOpen","no","setState","find","item","handleClose","handleAdd","map","count","movie","poster","director","actor","date","rate","icon","faVideo","href","target","faTicketAlt","faThumbsUp","Data_domestic","Data_dome","Movie_oversea","Data_oversea","MovieDays","isLoading","weeklyBoxOfficeList","getMovies","a","axios","get","data","boxOfficeResult","handleChange","e","value","handleClick","type","onChange","placeholder","faSearch","rank","movieNm","openDt","audiAcc","MovieForm","handleScreen","to","path","exact","component","Movie_domestic","MovieApp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.65ab0dc6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Modal.scss'\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        const {flg , onClose, findData} = this.props\r\n        return (\r\n            <div className={`Modal ${flg && 'on'}`} >\r\n                <h2>{findData.title}</h2>\r\n                <div>\r\n                <iframe width=\"100%\" height=\"100%\" src={\"https://www.youtube.com/embed/\" + findData.key} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </div>\r\n                <div className=\"close\" onClick={onClose}>X</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport Data_All from './Movie_Data/Data_All.json';\r\nimport './Movie_oversea.scss';\r\nimport Modal from './Modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faVideo } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTicketAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Movie_All extends Component {\r\n    state = {\r\n        Movies : Data_All,\r\n        flg: false,\r\n        findData : {},\r\n        text: ''\r\n    }\r\n\r\n    // 예고편 모달창 띄우기\r\n\r\n    handleOpen = (no) => {\r\n        this.setState({\r\n            findData : this.state.Movies.find( item => item.no === no),\r\n            flg : true\r\n        })\r\n    }\r\n\r\n    // 예고편 모달창 닫기\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            flg: false\r\n        })\r\n    }\r\n\r\n    // 좋아요 UP 기능\r\n\r\n    handleAdd = (no) => {\r\n        const { Movies } = this.state\r\n        this.setState({\r\n            Movies : Movies.map(item => {\r\n                if ( item.no === no) {\r\n                    return {\r\n                        ...item , \r\n                        count : item.count + 1\r\n                    }\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { Movies } = this.state\r\n        this.setState({\r\n            Movies : Movies.map (item => {\r\n                return {\r\n                    ...item ,\r\n                    count : 0,\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { Movies , flg , findData} = this.state\r\n        return (\r\n            <div className=\"Movie_content\">\r\n                {\r\n                 Movies.map( movie =>\r\n                    <article key={movie.no} >\r\n                     <div className=\"card_top\">\r\n                        <img src={movie.poster}/>  \r\n                        <div>\r\n                            <h3>{movie.title}</h3>\r\n                            <p>감독: {movie.director}</p>\r\n                            <p>출연: {movie.actor}</p>\r\n                            <p>개봉일: {movie.date} </p>\r\n                            <p>평점: {movie.rate}</p>\r\n                        </div>\r\n                     </div>\r\n                        <div className=\"card_bottom\">\r\n                        <hr/>\r\n                            <div className=\"card_nav\">\r\n                            <a onClick={ () => this.handleOpen(movie.no)}><span><FontAwesomeIcon icon={ faVideo }/> 예고편</span></a>\r\n                            <a href=\"https://www.megabox.co.kr/\" target=\"_blank\"><span><FontAwesomeIcon icon={ faTicketAlt }/> 예매하기</span></a>\r\n                            <a onClick={ () => this.handleAdd(movie.no)}><span><FontAwesomeIcon icon={ faThumbsUp }/> {movie.count}</span></a>\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                    )\r\n                }\r\n                <Modal flg = { flg } onClose = {this.handleClose} findData = {findData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie_All;","import React, { Component } from 'react';\r\nimport Data_dome from './Movie_Data/Data_dome.json';\r\nimport './Movie_oversea.scss';\r\nimport Modal from './Modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faVideo } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTicketAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Data_domestic extends Component {\r\n    state = {\r\n        Movies : Data_dome,\r\n        flg: false,\r\n        findData : {},\r\n        text: ''\r\n    }\r\n\r\n     // 예고편 모달창 띄우기\r\n\r\n    handleOpen = (no) => {\r\n        this.setState({\r\n            findData : this.state.Movies.find( item => item.no === no),\r\n            flg : true\r\n        })\r\n    }\r\n\r\n     // 예고편 모달창 닫기\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            flg: false\r\n        })\r\n    }\r\n\r\n    // 좋아요 UP 기능\r\n\r\n    handleAdd = (no) => {\r\n        const { Movies } = this.state\r\n        this.setState({\r\n            Movies : Movies.map(item => {\r\n                if ( item.no === no) {\r\n                    return {\r\n                        ...item , \r\n                        count : item.count + 1\r\n                    }\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { Movies } = this.state\r\n        this.setState({\r\n            Movies : Movies.map (item => {\r\n                return {\r\n                    ...item ,\r\n                    count : 0,\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { Movies , flg , findData} = this.state\r\n        return (\r\n            <div className=\"Movie_content\">\r\n                {\r\n                 Movies.map( movie =>\r\n                    <article key={movie.no} >\r\n                     <div className=\"card_top\">\r\n                        <img src={movie.poster}/>  \r\n                        <div>\r\n                            <h3>{movie.title}</h3>\r\n                            <p>감독: {movie.director}</p>\r\n                            <p>출연: {movie.actor}</p>\r\n                            <p>개봉일: {movie.date} </p>\r\n                            <p>평점: {movie.rate}</p>\r\n                        </div>\r\n                     </div>\r\n                        <div className=\"card_bottom\">\r\n                        <hr/>\r\n                            <div className=\"card_nav\">\r\n                            <a onClick={ () => this.handleOpen(movie.no)}><span><FontAwesomeIcon icon={ faVideo }/> 예고편</span></a>\r\n                            <a href=\"https://www.megabox.co.kr/\" target=\"_blank\"><span><FontAwesomeIcon icon={ faTicketAlt }/> 예매하기</span></a>\r\n                            <a onClick={ () => this.handleAdd(movie.no)}><span><FontAwesomeIcon icon={ faThumbsUp }/> {movie.count}</span></a>\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                    )\r\n                }\r\n                <Modal flg = { flg } onClose = {this.handleClose} findData = {findData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Data_domestic;","import React, { Component } from 'react';\r\nimport Data_oversea from './Movie_Data/Data_oversea.json';\r\nimport './Movie_oversea.scss';\r\nimport Modal from './Modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faVideo } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTicketAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Movie_oversea extends Component {\r\n    state = {\r\n        Movies : Data_oversea,\r\n        flg: false,\r\n        findData : {},\r\n        text: ''\r\n    }\r\n\r\n    // 예고편 모달창 띄우기\r\n\r\n    handleOpen = (no) => {\r\n        this.setState({\r\n            findData : this.state.Movies.find( item => item.no === no),\r\n            flg : true\r\n        })\r\n    }\r\n\r\n    //예고편 모달창 닫기\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            flg: false\r\n        })\r\n    }\r\n\r\n    // 좋아요 UP 기능\r\n\r\n    handleAdd = (no) => {\r\n        const { Movies } = this.state\r\n        this.setState({\r\n            Movies : Movies.map(item => {\r\n                if ( item.no === no) {\r\n                    return {\r\n                        ...item , \r\n                        count : item.count + 1\r\n                    }\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { Movies } = this.state\r\n        this.setState({\r\n            Movies : Movies.map (item => {\r\n                return {\r\n                    ...item ,\r\n                    count : 0,\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { Movies , flg , findData} = this.state\r\n        return (\r\n            <div className=\"Movie_content\">\r\n                {\r\n                 Movies.map( movie =>\r\n                    <article key={movie.no} >\r\n                     <div className=\"card_top\">\r\n                        <img src={movie.poster}/>  \r\n                        <div>\r\n                            <h3>{movie.title}</h3>\r\n                            <p>감독: {movie.director}</p>\r\n                            <p>출연: {movie.actor}</p>\r\n                            <p>개봉일: {movie.date} </p>\r\n                            <p>평점: {movie.rate}</p>\r\n                        </div>\r\n                     </div>\r\n                        <div className=\"card_bottom\">\r\n                        <hr/>\r\n                            <div className=\"card_nav\">\r\n                            <a onClick={ () => this.handleOpen(movie.no)}><span><FontAwesomeIcon icon={ faVideo }/> 예고편</span></a>\r\n                            <a href=\"https://www.megabox.co.kr/\" target=\"_blank\"><span><FontAwesomeIcon icon={ faTicketAlt }/> 예매하기</span></a>\r\n                            <a onClick={ () => this.handleAdd(movie.no)}><span><FontAwesomeIcon icon={ faThumbsUp }/> {movie.count}</span></a>\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                    )\r\n                }\r\n                <Modal flg = { flg } onClose = {this.handleClose} findData = {findData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie_oversea;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './MovieDays.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nclass MovieDays extends Component {\r\n\r\n    state = {\r\n        isLoading: true,\r\n        weeklyBoxOfficeList: [],\r\n        date: \"\",\r\n    }\r\n\r\n    // 영화진흥위원회 API 가져오기\r\n\r\n    getMovies = async () => {\r\n        const {\r\n          data: {\r\n            boxOfficeResult: {weeklyBoxOfficeList}\r\n          }\r\n        }\r\n        = await axios.get(`https://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json?key=f73424077cfe12471436e35f8633ace8&targetDt=${this.state.date}`)\r\n        this.setState({weeklyBoxOfficeList, isLoading: false})\r\n    }\r\n\r\n    handleChange = (e) => {\r\n            this.setState ({\r\n            date: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.getMovies()\r\n    } \r\n\r\n    render() {\r\n        const { isLoading , weeklyBoxOfficeList , date  }  = this.state\r\n        return (\r\n            <div>\r\n                <section className=\"container\"> \r\n                <div>\r\n                <h2> 영화 인기 순위 </h2>\r\n                <p className=\"date\"> 검색 날짜: { date } </p>\r\n                <div className=\"inputBox\">\r\n                    <input type=\"text\" onChange={this.handleChange} placeholder=\"( 예: 20200701 )\"/>\r\n                    <button onClick={this.handleClick}><FontAwesomeIcon icon={ faSearch }/></button>\r\n                </div>\r\n                    <div>\r\n                {isLoading ? (<div className=\"loader\"><span>원하는 날짜를 입력해주세요</span></div>) : (<div className=\"movie\">\r\n                {\r\n                    weeklyBoxOfficeList.map((movie) => \r\n                       <div className=\"movielist\"> \r\n                            {movie.rank}\r\n                            <div className=\"movie_info\">\r\n                                {movie.movieNm} \r\n                                <div className=\"movie_detali\">\r\n                                <p>개봉일 : {movie.openDt}</p>\r\n                                <p>관객수 : {movie.audiAcc} 명</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )   \r\n                }\r\n\r\n                </div>)}\r\n                    </div>\r\n                </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDays;","import React, { Component } from 'react';\r\nimport './MovieForm.scss'\r\nimport { Link, Route, HashRouter } from 'react-router-dom';\r\nimport Movie_All from './Movie_All';\r\nimport Movie_domestic from './Movie_domestic';\r\nimport Movie_oversea from './Movie_oversea';\r\nimport MovieDays from './MovieDays';\r\n\r\n\r\nclass MovieForm extends Component {\r\n    state = {\r\n        flg: false,\r\n    }\r\n\r\n    handleScreen = () => {\r\n        const { flg } = this.state\r\n        this.setState({\r\n            flg: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { flg } = this.state\r\n        return (\r\n            <div className=\"MovieForm\">\r\n                <ul onClick={this.handleScreen}>\r\n                    <li><Link to=\"/Movie_All\">전체</Link></li>\r\n                    <li><Link to=\"/Movie_domestic\">국내</Link></li>\r\n                    <li><Link to=\"/Movie_oversea\">해외</Link></li>\r\n                    <li><Link to=\"/MovieDays\"> 일별 인기순위 조회 </Link></li>\r\n                </ul>\r\n                <div className={`Movie_All ${flg && 'on'}`}><Movie_All /></div>\r\n                <Route path=\"/Movie_All\" exact component={Movie_All} />\r\n                <Route path=\"/Movie_domestic\" component={Movie_domestic} />\r\n                <Route path=\"/Movie_oversea\" component={Movie_oversea} />\r\n                <Route path=\"/MovieDays\" component={MovieDays}>\r\n                </Route>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieForm;","import React, { Component } from 'react';\r\nimport './MovieApp.scss'\r\nimport MovieForm from './MovieForm';\r\n\r\nclass MovieApp extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"MovieApp\">\r\n                <header>Movie World</header>\r\n                <div className=\"MovieApp_content\">\r\n                <MovieForm />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieApp;","import React, { Component } from 'react';\nimport MovieApp from './components/MovieApp';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MovieApp />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}